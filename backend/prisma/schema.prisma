// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum streamType {
  Spotify
  Youtube
}

enum StreamType {
  SPOTIFY
  YOUTUBE
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  imageUrl  String
  streams   Stream[]
  upvotes   Upvote[]
}

model Stream {
  id          String    @id @default(uuid())
  type        StreamType
  active      Boolean   @default(true)
  url         String
  title       String
  smallImg    String
  bigImg      String
  upvotes     Upvote[]
  creator     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  extractedId String
}

model Upvote {
  id        String @id @default(uuid())
  upvoter   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  stream    Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  streamId  String

  @@unique([userId, streamId])
}
